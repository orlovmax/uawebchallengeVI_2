/* =========================================================
   orlovmax.com scss elements library v1.1
   ===================================
   More info at https://github.com/orlovmax/sass-scss-elements
   ========================================================= */
     
@mixin testbg($red: 255, $green: 0, $blue: 0, $alpha: .3){ 
	background-color: rgba($red, $green, $blue, $alpha);
}

@mixin testout($width: 1px, $line-type: solid, $color: #0074d9) { 
	outline: $width $line-type $color;
}

%hidentext { 
	text-indent: 100%;
	white-space: nowrap;
	overflow: hidden;
}

 
%clearfix { 

	&:before,
	&:after{ 
		display: block;
		content: '';
		clear: both;
		height: 0;
	}	
}


@mixin opacity($opacity: 0.5) { 
	-webkit-opacity: $opacity;
	-khtml-opacity:  $opacity;
	-moz-opacity:    $opacity;
	opacity:         $opacity;
	$opperc:         $opacity * 100;
}


@mixin box-sizing($sizing: border-box) { 
	-webkit-box-sizing: $sizing;
	-moz-box-sizing:    $sizing;
	-ms-box-sizing:     $sizing;
	box-sizing:         $sizing;
}


@mixin size($width:0, $height:0) { 
	width: $width;
	height: $height;
}


@mixin user-select($argument: none) { 
	-webkit-user-select: $argument;
	-moz-user-select:    $argument;
	-ms-user-select:     $argument;
	user-select:         $argument;
}



@mixin bg-cover{ 
	-webkit-background-size: cover;
	background-size:         cover;
}
 
@mixin bg-contain{ 
	-webkit-background-size: contain;
	background-size:         contain;
}

@mixin bg-size($arguments...){
	-webkit-background-size: $arguments;
	        background-size: $arguments;
}

@mixin rounded($radius: 5px) { 
	-webkit-border-radius: $radius;
	-moz-border-radius:    $radius;
	border-radius:         $radius;
}

@mixin border-radius($top-left: 5px, $top-right: 5px, $bottom-right: 5px, $bottom-left: 5px) { 
	-webkit-border-radius: $top-left $top-right $bottom-right $bottom-left;
	-moz-border-radius:    $top-left $top-right $bottom-right $bottom-left;
	border-radius:         $top-left $top-right $bottom-right $bottom-left;
}


@mixin linear-gradient($angle-position: top, $start-color: #fff, $end-color: #000, $fallback-color: $start-color)	{ 
	background: $fallback-color;
	background:                  -webkit-linear-gradient($angle-position, $start-color, $end-color);
	background:                     -moz-linear-gradient($angle-position, $start-color, $end-color);
	background:                      -ms-linear-gradient($angle-position, $start-color, $end-color);
	background:                       -o-linear-gradient($angle-position, $start-color, $end-color);
	background:                          linear-gradient($angle-position, $start-color, $end-color);
}
 

@mixin box-shadow($hoff: 1px, $voff: 1px, $blur: 2px, $spread: 0, $color: #000){ 
	-webkit-box-shadow: $hoff $voff $blur $spread $color;
	-moz-box-shadow:    $hoff $voff $blur $spread $color;
	box-shadow:         $hoff $voff $blur $spread $color;
}
 
@mixin inset-box-shadow($hoff: 1px, $voff: 1px, $blur: 2px, $spread: 0, $color: #000){ 
	-webkit-box-shadow: inset $hoff $voff $blur $spread $color;
	-moz-box-shadow:    inset $hoff $voff $blur $spread $color;
	box-shadow:         inset $hoff $voff $blur $spread $color;
}


@mixin animation($animation-name:first, $animation-duration:1, $animation-tfunction:linear, $animation-delay:0, $animation-iteration:infinite, $animation-direction:normal, $animation-play-state:running){
	-webkit-animation: $animation-name $animation-duration + s $animation-tfunction $animation-delay + s $animation-iteration $animation-direction;
			animation: $animation-name $animation-duration + s $animation-tfunction $animation-delay + s $animation-iteration $animation-direction;
	-webkit-animation-play-state: $animation-play-state;
		    animation-play-state: $animation-play-state;	
}


@mixin transform($arguments) { 
	-webkit-transform: $arguments;
	-moz-transform:    $arguments;
	-ms-transform:     $arguments;
	-o-transform:      $arguments;
	transform:         $arguments;	
}

@mixin t-origin($X-axis:50%, $Y-axis:50%, $Z-axis:0){
	-webkit-transform-origin: $X-axis $Y-axis $Z-axis;
       -moz-transform-origin: $X-axis $Y-axis $Z-axis;
        -ms-transform-origin: $X-axis $Y-axis $Z-axis;
         -o-transform-origin: $X-axis $Y-axis $Z-axis;
            transform-origin: $X-axis $Y-axis $Z-axis;
}
	
@mixin rotate($rotate-angle: 0){ 
	-webkit-transform: rotate($rotate-angle + deg);
	-moz-transform:    rotate($rotate-angle + deg);
	-ms-transform:     rotate($rotate-angle + deg);
	-o-transform:      rotate($rotate-angle + deg);
	transform:         rotate($rotate-angle + deg);
}


@mixin scale($scale: 1){ 
	-webkit-transform: scale($scale);
	-moz-transform:    scale($scale);
	-ms-transform:     scale($scale);
	-o-transform:      scale($scale);
	transform:         scale($scale);
}
 
@mixin scaleXY($scaleX: 1, $scaleY: 1){ 
	-webkit-transform: scale($scaleX, $scaleY);
	-moz-transform:    scale($scaleX, $scaleY);
	-ms-transform:     scale($scaleX, $scaleY);
	-o-transform:      scale($scaleX, $scaleY);
	transform:         scale($scaleX, $scaleY);
}
 
@mixin scaleX($scaleX: 1){ 
	-webkit-transform: scaleX($scaleX);
	-moz-transform:    scaleX($scaleX);
	-ms-transform:     scaleX($scaleX);
	-o-transform:      scaleX($scaleX);
	transform:         scaleX($scaleX);
}
 
@mixin scaleY($scaleY: 1){ 
	-webkit-transform: scaleY($scaleY);
	-moz-transform:    scaleY($scaleY);
	-ms-transform:     scaleY($scaleY);
	-o-transform:      scaleY($scaleY);
	transform:         scaleY($scaleY);
}

 
@mixin skew($skewX-angle: 0, $skewY-angle: 0){ 
	-webkit-transform: skew($skewX-angle + deg, $skewY-angle + deg);
	-moz-transform:    skew($skewX-angle + deg, $skewY-angle + deg);
	-ms-transform:     skew($skewX-angle + deg, $skewY-angle + deg);
	-o-transform:      skew($skewX-angle + deg, $skewY-angle + deg);
	transform:         skew($skewX-angle + deg, $skewY-angle + deg);
}
                                                      
@mixin skewX($skewX-angle: 0){ 
	-webkit-transform: skewX($skewX-angle + deg);
	-moz-transform:    skewX($skewX-angle + deg);
	-ms-transform:     skewX($skewX-angle + deg);
	-o-transform:      skewX($skewX-angle + deg);
	transform:         skewX($skewX-angle + deg);
}

@mixin skewY($skewY-angle: 0){ 
	-webkit-transform: skewY($skewY-angle + deg);
	-moz-transform:    skewY($skewY-angle + deg);
	-ms-transform:     skewY($skewY-angle + deg);
	-o-transform:      skewY($skewY-angle + deg);
	transform:         skewY($skewY-angle + deg);
}


@mixin translate($move-x:0, $move-y:0){ 
	-webkit-transform: translate($move-x,$move-y);
	-moz-transform:    translate($move-x,$move-y);
	-ms-transform:     translate($move-x,$move-y);
	-o-transform:      translate($move-x,$move-y);
	transform:         translate($move-x,$move-y);
}


@mixin transition($property: all, $duration: .5, $tfunction: ease, $delay: 0){ 
	-webkit-transition: $property $duration + s $tfunction $delay + s;
	-moz-transition:    $property $duration + s $tfunction $delay + s;
	-ms-transition:     $property $duration + s $tfunction $delay + s;
	-o-transition:      $property $duration + s $tfunction $delay + s;
	transition:         $property $duration + s $tfunction $delay + s;
}